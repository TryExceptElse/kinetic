group 'com.github.io.tryexceptelse'
version '0.0.1'

apply plugin: 'cpp'

buildscript {
    ext.third_party_dir = 'build/third_party'
    ext.test_dir = '../out/test/actor'

    ext.eigen_dir = 'third_party/eigen'
}

model {
    components {
        actor(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs "src"
                    }
                    exportedHeaders {
                        srcDirs "src", "third_party/src", "third_party/test"
                    }
                }
            }
            binaries.all {
                cppCompiler.args '-O0', '-g', '-Wextra', '-fPIC'
            }
            binaries.withType(SharedLibraryBinary) { binary ->
                buildable = false
            }
        }
        testActor(NativeExecutableSpec) {
            sources {
                cpp {
                    source {
                        srcDirs "test", 'third_party/test'
                    }
                }
            }
            binaries.all {
                lib library: 'actor', linkage: 'static'
                cppCompiler.args '-O0', '-g', '-Wextra'
            }
        }
    }
}

task prepareActorDependencies(type: Exec) {
    workingDir '.'
    commandLine 'python3'
    args 'scripts/prebuild.py'
}

build {
    dependsOn prepareActorDependencies
    tasks.findByName('build').mustRunAfter 'prepareActorDependencies'

    doLast {
        cppLint
        // copy built tests
        copy {
            includeEmptyDirs = false
            from new File("build/exe/testActor")
            into test_dir
        }
    }
}

task cppLint(type:Exec) {
    workingDir 'src'
    commandLine 'python3'
    args  '-m', 'cpplint', '--recursive', '--quiet', '.'
}


task cleanTestDir(type: Delete) {
}

clean.doLast {
    cleanTestDir
}
